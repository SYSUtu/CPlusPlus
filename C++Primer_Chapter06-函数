# 函数
* 函数调用完成两个工作：一，用实参初始化函数对应的形参，二是将控制权转移给被调用函数。此时，主调函数的执行被暂时中断，被调函数开始执行
## 数组形参

	void print(int*);
	void print(int[]);
	void print(int[10]);//这里表示期望含有多少元素，实际不一定
* 数组引用形参

		void print(int (&arr)[10])
		//同样int *arr[4]；
		是一个一维数组，数组的每一项都是一个指向int的指针
		int (*arr)[4]；
		是一个二位数组的首地址，相当于int arr[n][4]中的arr
## 函数指针
* 函数指针指向的是函数而非对象，和其他指针一样，函数指针指向某种特定类型。函数的类型由它的返回类型和形参类型共同决定，与函数名无关。例如：

		bool lengthCompare(strint&,string&);
		=>
		bool (*ptr)(strint&,string&);
* 当我们把函数名作为一个值使用时候，该函数自动地转换成指针。此外我们也可以直接使用指向函数的指针调用函数，无需提前解引用
